import 'package:flutter/material.dart';
import 'package:fluttericon/font_awesome5_icons.dart';
import 'package:fluttericon/font_awesome_icons.dart';
import 'package:food_icons/food_icons.dart';

//IMPORTANT, USING MEDIAN INSTEAD OF MEAN AS THIS WAS RECOMMENDED FOR THE DATASET

enum FuelType {
  woodLogs,
  woodChips,
  woodPellets,
  grassStraw,
  coal,
}

enum DietaryType {
  vegan,
  vegetarian,
  meatOnceAWeek,
  meatThreeToFourTimesAWeek,
  meatFivePlusDays,
}

enum FoodType {
  apples,
  bananas,
  beer,
  beetSugar,
  berriesAndGrapes,
  bovineMeatBeef,
  bovineMeatDairy,
  brassicas,
  caneSugar,
  cassava,
  cheese,
  citrusFruit,
  coffee,
  crustaceansFarmed,
  darkChocolate,
  eggs,
  fishWild,
  fishFarmed,
  groundnuts,
  lambAndMutton,
  maizeMeal,
  milk,
  nuts,
  oatmeal,
  oliveOil,
  onionsAndLeeks,
  otherFruit,
  otherPulses,
  otherVegetables,
  palmOil,
  peas,
  pigMeat,
  potatoes,
  poultryMeat,
  rapeseedOil,
  rice,
  rootVegetables,
  soybeanOil,
  soymilk,
  sunflowerOil,
  tofu,
  tomatoes,
  bread,
  wine,
}

Map<FoodType, String> foodTypeDisplayNames = {
  FoodType.apples: "Apples",
  FoodType.bananas: "Bananas",
  FoodType.beer: "Beer",
  FoodType.beetSugar: "Sugar (Beet)",
  FoodType.berriesAndGrapes: "Berries & Grapes",
  FoodType.bovineMeatBeef: "Beef",
  FoodType.bovineMeatDairy: "Dairy Beef",
  FoodType.brassicas: "Cabbages & Kale",
  FoodType.caneSugar: "Sugar (Cane)",
  FoodType.cassava: "Cassava",
  FoodType.cheese: "Cheese",
  FoodType.citrusFruit: "Citrus Fruits",
  FoodType.coffee: "Coffee",
  FoodType.crustaceansFarmed: "Farmed Shellfish",
  FoodType.darkChocolate: "Dark Chocolate",
  FoodType.eggs: "Eggs",
  FoodType.fishFarmed: "Farmed Fish",
  FoodType.fishWild: "Wild Fish",
  FoodType.groundnuts: "Peanuts",
  FoodType.lambAndMutton: "Lamb & Mutton",
  FoodType.maizeMeal: "Cornmeal",
  FoodType.milk: "Milk",
  FoodType.nuts: "Nuts",
  FoodType.oatmeal: "Oatmeal/Cereal",
  FoodType.oliveOil: "Olive Oil",
  FoodType.onionsAndLeeks: "Onions & Leeks",
  FoodType.otherFruit: "Other Fruits",
  FoodType.otherPulses: "Other Legumes",
  FoodType.otherVegetables: "Other Vegetables",
  FoodType.palmOil: "Palm Oil",
  FoodType.peas: "Peas",
  FoodType.pigMeat: "Pork",
  FoodType.potatoes: "Potatoes",
  FoodType.poultryMeat: "Chicken",
  FoodType.rapeseedOil: "Canola Oil",
  FoodType.rice: "Rice",
  FoodType.rootVegetables: "Root Vegetables",
  FoodType.soybeanOil: "Soybean Oil",
  FoodType.soymilk: "Soy Milk",
  FoodType.sunflowerOil: "Sunflower Oil",
  FoodType.tofu: "Tofu",
  FoodType.tomatoes: "Tomatoes",
  FoodType.bread: "Bread (Wheat & Rye)",
  FoodType.wine: "Wine",
};

Map<FoodType, double> foodTypeValues = {
  FoodType.apples: 0.4,
  FoodType.bananas: 0.8,
  FoodType.beer: 1.2,
  FoodType.beetSugar: 1.8,
  FoodType.berriesAndGrapes: 1.4,
  FoodType.bovineMeatBeef: 60.4,
  FoodType.bovineMeatDairy: 34.1,
  FoodType.brassicas: 0.4,
  FoodType.caneSugar: 3.2,
  FoodType.cassava: 1.1,
  FoodType.cheese: 18.6,
  FoodType.citrusFruit: 0.3,
  FoodType.coffee: 8.2,
  FoodType.crustaceansFarmed: 14.7,
  FoodType.darkChocolate: 5.0,
  FoodType.eggs: 4.2,
  FoodType.fishFarmed: 7.9,
  FoodType.fishWild: 8.19,
  FoodType.groundnuts: 3.3,
  FoodType.lambAndMutton: 40.6,
  FoodType.maizeMeal: 1.2,
  FoodType.milk: 2.7,
  FoodType.nuts: -1.3,
  FoodType.oatmeal: 2.6,
  FoodType.oliveOil: 5.1,
  FoodType.onionsAndLeeks: 0.4,
  FoodType.otherFruit: 0.7,
  FoodType.otherPulses: 1.4,
  FoodType.otherVegetables: 0.4,
  FoodType.palmOil: 7.2,
  FoodType.peas: 0.8,
  FoodType.pigMeat: 10.6,
  FoodType.potatoes: 0.5,
  FoodType.poultryMeat: 7.5,
  FoodType.rapeseedOil: 3.5,
  FoodType.rice: 3.7,
  FoodType.rootVegetables: 0.4,
  FoodType.soybeanOil: 3.9,
  FoodType.soymilk: 0.9,
  FoodType.sunflowerOil: 3.5,
  FoodType.tofu: 2.6,
  FoodType.tomatoes: 0.7,
  FoodType.bread: 1.3,
  FoodType.wine: 1.6,
};

enum CarType {
  petrol,
  diesel,
  hybridElectric,
  batteryElectric,
}

enum CarTypePetrol {
  mini,
  superMini,
  lowerMedium,
  upperMedium,
  executive,
  luxury,
  sports,
  dualPurpose4x4,
  mpv,
  smallMotorbike,
  mediumMotorbike,
  largeMotorbike,
  averageMotorbike,
  none,
}

enum CarTypeDiesel {
  mini,
  superMini,
  lowerMedium,
  upperMedium,
  executive,
  luxury,
  sports,
  dualPurpose4x4,
  mpv,
  smallMotorbike,
  mediumMotorbike,
  largeMotorbike,
  averageMotorbike,
  none,
}

enum HybridElectric {
  superMini,
  lowerMedium,
  upperMedium,
  executive,
  luxury,
  sports,
  dualPurpose4x4,
  mpv,
  smallMotorbike,
  mediumMotorbike,
  largeMotorbike,
  averageMotorbike,
  none
}

enum BatteryElectric {
  mini,
  superMini,
  lowerMedium,
  upperMedium,
  executive,
  luxury,
  sports,
  dualPurpose4x4,
  mpv,
  smallMotorbike,
  mediumMotorbike,
  largeMotorbike,
  averageMotorbike,
  none
}

enum TrainType {
  nationalRail,
  internationalRail,
  lightRailAndTram,
  londonUnderground,
}

enum BusType {
  localLondonBus,
  averageLocalBus,
  coach,
}

Map<BusType, IconData> busTypeIcons = {
  BusType.localLondonBus: FontAwesome.bus,
  BusType.averageLocalBus: FontAwesome5.bus,
  BusType.coach: FontAwesome5.bus_alt,
};

enum FlightType {
  domestic,
  shortHaul,
  longHaul,
  international,
}

Map<FuelType, String> fuelTypeDisplayNames = {
  FuelType.woodLogs: 'Wood Logs',
  FuelType.woodChips: 'Wood Chips',
  FuelType.woodPellets: 'Wood Pellets',
  FuelType.grassStraw: 'Grass Straw',
  FuelType.coal: 'Coal',
};

Map<DietaryType, String> dietaryTypeDisplayNames = {
  DietaryType.vegan: 'Vegan',
  DietaryType.vegetarian: 'Vegetarian',
  DietaryType.meatOnceAWeek: 'Meat Once a Week',
  DietaryType.meatThreeToFourTimesAWeek: 'Meat Three to Four Times a Week',
  DietaryType.meatFivePlusDays: 'Meat Five Plus Days',
};

Map<CarType, String> carTypeDisplayNames = {
  CarType.petrol: 'Petrol',
  CarType.diesel: 'Diesel',
  CarType.hybridElectric: 'Hybrid Electric',
  CarType.batteryElectric: 'Battery Electric'
};

Map<CarTypePetrol, String> carTypePetrolDisplayNames = {
  CarTypePetrol.mini: 'Mini',
  CarTypePetrol.superMini: 'Super Mini',
  CarTypePetrol.lowerMedium: 'Lower Medium',
  CarTypePetrol.upperMedium: 'Upper Medium',
  CarTypePetrol.executive: 'Executive',
  CarTypePetrol.luxury: 'Luxury',
  CarTypePetrol.sports: 'Sports',
  CarTypePetrol.dualPurpose4x4: 'Dual Purpose 4x4',
  CarTypePetrol.mpv: 'MPV',
  CarTypePetrol.smallMotorbike: 'Small Motorbike',
  CarTypePetrol.mediumMotorbike: 'Medium Motorbike',
  CarTypePetrol.largeMotorbike: 'Large Motorbike',
  CarTypePetrol.averageMotorbike: 'Average Motorbike',
  CarTypePetrol.none: 'None',
};

Map<CarTypeDiesel, String> carTypeDieselDisplayNames = {
  CarTypeDiesel.mini: 'Mini',
  CarTypeDiesel.superMini: 'Super Mini',
  CarTypeDiesel.lowerMedium: 'Lower Medium',
  CarTypeDiesel.upperMedium: 'Upper Medium',
  CarTypeDiesel.executive: 'Executive',
  CarTypeDiesel.luxury: 'Luxury',
  CarTypeDiesel.sports: 'Sports',
  CarTypeDiesel.dualPurpose4x4: 'Dual Purpose 4x4',
  CarTypeDiesel.mpv: 'MPV',
  CarTypeDiesel.smallMotorbike: 'Small Motorbike',
  CarTypeDiesel.mediumMotorbike: 'Medium Motorbike',
  CarTypeDiesel.largeMotorbike: 'Large Motorbike',
  CarTypeDiesel.averageMotorbike: 'Average Motorbike',
  CarTypeDiesel.none: 'None',
};

Map<HybridElectric, String> hybridElectricDisplayNames = {
  HybridElectric.superMini: 'Super Mini',
  HybridElectric.lowerMedium: 'Lower Medium',
  HybridElectric.upperMedium: 'Upper Medium',
  HybridElectric.executive: 'Executive',
  HybridElectric.luxury: 'Luxury',
  HybridElectric.sports: 'Sports',
  HybridElectric.dualPurpose4x4: 'Dual Purpose 4x4',
  HybridElectric.mpv: 'MPV',
  HybridElectric.none: 'None',
};

Map<BatteryElectric, String> batteryElectricDisplayNames = {
  BatteryElectric.mini: 'Mini',
  BatteryElectric.superMini: 'Super Mini',
  BatteryElectric.lowerMedium: 'Lower Medium',
  BatteryElectric.upperMedium: 'Upper Medium',
  BatteryElectric.executive: 'Executive',
  BatteryElectric.luxury: 'Luxury',
  BatteryElectric.sports: 'Sports',
  BatteryElectric.dualPurpose4x4: 'Dual Purpose 4x4',
  BatteryElectric.mpv: 'MPV',
  BatteryElectric.none: 'None',
};

Map<TrainType, String> trainTypeDisplayNames = {
  TrainType.nationalRail: 'National Rail',
  TrainType.internationalRail: 'International Rail',
  TrainType.lightRailAndTram: 'Light Rail and Tram',
  TrainType.londonUnderground: 'London Underground',
};

Map<BusType, String> busTypeDisplayNames = {
  BusType.localLondonBus: 'Local London Bus',
  BusType.averageLocalBus: 'Average Local Bus',
  BusType.coach: 'Coach',
};

Map<FlightType, String> flightTypeDisplayNames = {
  FlightType.domestic: 'Domestic',
  FlightType.shortHaul: 'Short Haul',
  FlightType.longHaul: 'Long Haul',
  FlightType.international: 'International',
};

const Map<FuelType, double> fuelTypeValues = {
  FuelType.woodLogs: 43.89327,
  FuelType.woodChips: 40.58114,
  FuelType.woodPellets: 51.56192,
  FuelType.grassStraw: 57.63342,
  FuelType.coal: 2904.95,
};

const Map<DietaryType, double> dietaryTypeValues = {
  DietaryType.vegan: 2.120625,
  DietaryType.vegetarian: 2.7,
  DietaryType.meatOnceAWeek: 2.9225,
  DietaryType.meatThreeToFourTimesAWeek: 4.8,
  DietaryType.meatFivePlusDays: 6.408,
};

const Map<CarTypePetrol, double> carTypePetrolValues = {
  CarTypePetrol.mini: 0.12962,
  CarTypePetrol.superMini: 0.14101,
  CarTypePetrol.lowerMedium: 0.16405,
  CarTypePetrol.upperMedium: 0.19143,
  CarTypePetrol.executive: 0.21164,
  CarTypePetrol.luxury: 0.31741,
  CarTypePetrol.sports: 0.23648,
  CarTypePetrol.dualPurpose4x4: 0.20337,
  CarTypePetrol.mpv: 0.18358,
  CarTypePetrol.smallMotorbike: 0.08094,
  CarTypePetrol.mediumMotorbike: 0.09826,
  CarTypePetrol.largeMotorbike: 0.13072,
  CarTypePetrol.averageMotorbike: 0.11138,
  CarTypePetrol.none: 0,
};

const Map<CarTypeDiesel, double> carTypeDieselValues = {
  CarTypeDiesel.mini: 0.10607,
  CarTypeDiesel.superMini: 0.13047,
  CarTypeDiesel.lowerMedium: 0.14178,
  CarTypeDiesel.upperMedium: 0.15882,
  CarTypeDiesel.executive: 0.17142,
  CarTypeDiesel.luxury: 0.20952,
  CarTypeDiesel.sports: 0.16776,
  CarTypeDiesel.dualPurpose4x4: 0.20027,
  CarTypeDiesel.mpv: 0.17492,
  CarTypeDiesel.smallMotorbike: 0.08094,
  CarTypeDiesel.mediumMotorbike: 0.09826,
  CarTypeDiesel.largeMotorbike: 0.13072,
  CarTypeDiesel.averageMotorbike: 0.11138,
  CarTypeDiesel.none: 0,
};

const Map<HybridElectric, double> hybridElectricValues = {
  HybridElectric.superMini: 0.02951,
  HybridElectric.lowerMedium: 0.02130,
  HybridElectric.upperMedium: 0.02167,
  HybridElectric.executive: 0.02038,
  HybridElectric.luxury: 0.02272,
  HybridElectric.sports: 0.01635,
  HybridElectric.dualPurpose4x4: 0.02947,
  HybridElectric.mpv: 0.03866,
  HybridElectric.none: 0,
};

const Map<BatteryElectric, double> batteryElectricValues = {
  BatteryElectric.mini: 0.04041,
  BatteryElectric.superMini: 0.04474,
  BatteryElectric.lowerMedium: 0.04789,
  BatteryElectric.upperMedium: 0.05005,
  BatteryElectric.executive: 0.04561,
  BatteryElectric.luxury: 0.05318,
  BatteryElectric.sports: 0.07615,
  BatteryElectric.dualPurpose4x4: 0.05556,
  BatteryElectric.mpv: 0.07239,
  BatteryElectric.none: 0,
};

const Map<TrainType, double> trainTypeValues = {
  TrainType.nationalRail: 0.0351,
  TrainType.internationalRail: 0.00441,
  TrainType.lightRailAndTram: 0.02832,
  TrainType.londonUnderground: 0.02753,
};

const Map<BusType, double> busTypeValues = {
  BusType.localLondonBus: 0.07784,
  BusType.averageLocalBus: 0.10141,
  BusType.coach: 0.02669,
};

const Map<FlightType, double> flightTypeValues = {
  FlightType.domestic: 0.27101,
  FlightType.shortHaul: 0.18499,
  FlightType.longHaul: 0.25998,
  FlightType.international: 0.17493,
};

enum HouseholdAppliance {
  airConditioner,
  airfryer,
  blender,
  ceilingFan,
  coffeeMaker,
  computerLaptop,
  dehumidifier,
  dishwasher,
  dryer,
  electricStove,
  electricToothbrush,
  gasBoiler,
  gamingConsole,
  hairDryer,
  hotWaterHeater,
  incandescentBulbs,
  iron,
  kettle,
  ledCFLBulbs,
  microwave,
  oven,
  refrigerator,
  routerModem,
  smartphoneCharging,
  spaceHeater,
  tablet,
  television,
  toaster,
  vacuumCleaner,
  washingMachine,
}

Map<HouseholdAppliance, String> householdApplianceDisplayNames = {
  HouseholdAppliance.airConditioner: 'Air Conditioner',
  HouseholdAppliance.airfryer: 'Air Fryer',
  HouseholdAppliance.blender: 'Blender',
  HouseholdAppliance.ceilingFan: 'Ceiling Fan',
  HouseholdAppliance.coffeeMaker: 'Coffee Maker',
  HouseholdAppliance.computerLaptop: 'Computer/Laptop',
  HouseholdAppliance.dehumidifier: 'Dehumidifier',
  HouseholdAppliance.dishwasher: 'Dishwasher',
  HouseholdAppliance.dryer: 'Dryer',
  HouseholdAppliance.electricStove: 'Electric Stove',
  HouseholdAppliance.electricToothbrush: 'Electric Toothbrush',
  HouseholdAppliance.gasBoiler: 'Gas Boiler',
  HouseholdAppliance.gamingConsole: 'Gaming Console',
  HouseholdAppliance.hairDryer: 'Hair Dryer',
  HouseholdAppliance.hotWaterHeater: 'Hot Water Heater',
  HouseholdAppliance.incandescentBulbs: 'Incandescent Bulbs',
  HouseholdAppliance.iron: 'Iron',
  HouseholdAppliance.kettle: 'Kettle',
  HouseholdAppliance.ledCFLBulbs: 'LED/CFL Bulbs',
  HouseholdAppliance.microwave: 'Microwave',
  HouseholdAppliance.oven: 'Oven',
  HouseholdAppliance.refrigerator: 'Refrigerator',
  HouseholdAppliance.routerModem: 'WiFi Router',
  HouseholdAppliance.smartphoneCharging: 'Smartphone Charging',
  HouseholdAppliance.spaceHeater: 'Space Heater',
  HouseholdAppliance.tablet: 'Tablet',
  HouseholdAppliance.television: 'Television',
  HouseholdAppliance.toaster: 'Toaster',
  HouseholdAppliance.vacuumCleaner: 'Vacuum Cleaner',
  HouseholdAppliance.washingMachine: 'Washing Machine',
};

const Map<HouseholdAppliance, double> householdApplianceEmissions = {
  HouseholdAppliance.airConditioner: (1 * 0.20496) / 60,
  HouseholdAppliance.airfryer: (1.55 * 0.20496) / 60,
  HouseholdAppliance.blender: (0.4 * 0.20496) / 60,
  HouseholdAppliance.ceilingFan: (0.075 * 0.20496) / 60,
  HouseholdAppliance.coffeeMaker: (1.2 * 0.20496) / 60,
  HouseholdAppliance.computerLaptop: (0.06 * 0.20496) / 60,
  HouseholdAppliance.dehumidifier: (0.483 * 0.20496) / 60,
  HouseholdAppliance.dishwasher: (0.91 * 0.20496) / 60,
  HouseholdAppliance.dryer: (1.95 * 0.20496) / 60,
  HouseholdAppliance.electricStove: (1.5 * 0.20496) / 60,
  HouseholdAppliance.gasBoiler: (0.18256 * 0.20496) / 60,
  HouseholdAppliance.electricToothbrush: (0.0025 * 0.20496) / 60,
  HouseholdAppliance.gamingConsole: (0.09 * 0.20496) / 60,
  HouseholdAppliance.hairDryer: (1.5 * 0.20496) / 60,
  HouseholdAppliance.hotWaterHeater: (4.0 * 0.20496) / 60,
  HouseholdAppliance.incandescentBulbs: (0.06 * 0.20496) / 60,
  HouseholdAppliance.iron: (1.1 * 0.20496) / 60,
  HouseholdAppliance.kettle: (3 * 0.20496) / 60,
  HouseholdAppliance.ledCFLBulbs: (0.01 * 0.20496) / 60,
  HouseholdAppliance.microwave: (0.8 * 0.20496) / 60,
  HouseholdAppliance.oven: (0.8 * 0.20496) / 60,
  HouseholdAppliance.refrigerator: (0.227 * 0.20496) / 60,
  HouseholdAppliance.routerModem: (0.006 * 0.20496) / 60,
  HouseholdAppliance.smartphoneCharging: (0.004 * 0.20496) / 60,
  HouseholdAppliance.spaceHeater: (1.5 * 0.20496) / 60,
  HouseholdAppliance.tablet: (0.006 * 0.20496) / 60,
  HouseholdAppliance.television: (0.05 * 0.20496) / 60,
  HouseholdAppliance.toaster: (1.2 * 0.20496) / 60,
  HouseholdAppliance.vacuumCleaner: (1.4 * 0.20496) / 60,
  HouseholdAppliance.washingMachine: (0.75 * 0.20496) / 60,
};

const Map<dynamic, String> allEmissionNames = {
  FuelType.woodLogs: 'Wood Logs',
  FuelType.woodChips: 'Wood Chips',
  FuelType.woodPellets: 'Wood Pellets',
  FuelType.grassStraw: 'Grass Straw',
  FuelType.coal: 'Coal',
  DietaryType.vegan: 'Vegan',
  DietaryType.vegetarian: 'Vegetarian',
  DietaryType.meatOnceAWeek: 'Meat Once a Week',
  DietaryType.meatThreeToFourTimesAWeek: 'Meat Three to Four Times a Week',
  DietaryType.meatFivePlusDays: 'Meat Five Plus Days',
  CarType.petrol: 'Petrol',
  CarType.diesel: 'Diesel',
  CarType.hybridElectric: 'Hybrid Electric',
  CarType.batteryElectric: 'Battery Electric',
  CarTypePetrol.mini: 'Mini',
  CarTypePetrol.superMini: 'Super Mini',
  CarTypePetrol.lowerMedium: 'Lower Medium',
  CarTypePetrol.upperMedium: 'Upper Medium',
  CarTypePetrol.executive: 'Executive',
  CarTypePetrol.luxury: 'Luxury',
  CarTypePetrol.sports: 'Sports',
  CarTypePetrol.dualPurpose4x4: 'Dual Purpose 4x4',
  CarTypePetrol.mpv: 'MPV',
  CarTypePetrol.smallMotorbike: 'Small Motorbike',
  CarTypePetrol.mediumMotorbike: 'Medium Motorbike',
  CarTypePetrol.largeMotorbike: 'Large Motorbike',
  CarTypePetrol.averageMotorbike: 'Average Motorbike',
  CarTypePetrol.none: 'None',
  CarTypeDiesel.mini: 'Mini',
  CarTypeDiesel.superMini: 'Super Mini',
  CarTypeDiesel.lowerMedium: 'Lower Medium',
  CarTypeDiesel.upperMedium: 'Upper Medium',
  CarTypeDiesel.executive: 'Executive',
  CarTypeDiesel.luxury: 'Luxury',
  CarTypeDiesel.sports: 'Sports',
  CarTypeDiesel.dualPurpose4x4: 'Dual Purpose 4x4',
  CarTypeDiesel.mpv: 'MPV',
  CarTypeDiesel.smallMotorbike: 'Small Motorbike',
  CarTypeDiesel.mediumMotorbike: 'Medium Motorbike',
  CarTypeDiesel.largeMotorbike: 'Large Motorbike',
  CarTypeDiesel.averageMotorbike: 'Average Motorbike',
  CarTypeDiesel.none: 'None',
  HybridElectric.superMini: 'Super Mini',
  HybridElectric.lowerMedium: 'Lower Medium',
  HybridElectric.upperMedium: 'Upper Medium',
  HybridElectric.executive: 'Executive',
  HybridElectric.luxury: 'Luxury',
  HybridElectric.sports: 'Sports',
  HybridElectric.dualPurpose4x4: 'Dual Purpose 4x4',
  HybridElectric.mpv: 'MPV',
  HybridElectric.none: 'None',
  BatteryElectric.mini: 'Mini',
  BatteryElectric.superMini: 'Super Mini',
  BatteryElectric.lowerMedium: 'Lower Medium',
  BatteryElectric.upperMedium: 'Upper Medium',
  BatteryElectric.executive: 'Executive',
  BatteryElectric.luxury: 'Luxury',
  BatteryElectric.sports: 'Sports',
  BatteryElectric.dualPurpose4x4: 'Dual Purpose 4x4',
  BatteryElectric.mpv: 'MPV',
  BatteryElectric.none: 'None',
  TrainType.nationalRail: 'National Rail',
  TrainType.internationalRail: 'International Rail',
  TrainType.lightRailAndTram: 'Light Rail and Tram',
  TrainType.londonUnderground: 'London Underground',
  BusType.localLondonBus: 'Local London Bus',
  BusType.averageLocalBus: 'Average Local Bus',
  BusType.coach: 'Coach',
  FlightType.domestic: 'Domestic',
  FlightType.shortHaul: 'Short Haul',
  FlightType.longHaul: 'Long Haul',
  FlightType.international: 'International',
  FoodType.apples: "Apples",
  FoodType.bananas: "Bananas",
  FoodType.beer: "Beer",
  FoodType.beetSugar: "Sugar (Beet)",
  FoodType.berriesAndGrapes: "Berries & Grapes",
  FoodType.bovineMeatBeef: "Beef",
  FoodType.bovineMeatDairy: "Dairy Beef",
  FoodType.brassicas: "Cabbages & Kale",
  FoodType.caneSugar: "Sugar (Cane)",
  FoodType.cassava: "Cassava",
  FoodType.cheese: "Cheese",
  FoodType.citrusFruit: "Citrus Fruits",
  FoodType.coffee: "Coffee",
  FoodType.crustaceansFarmed: "Farmed Shellfish",
  FoodType.darkChocolate: "Dark Chocolate",
  FoodType.eggs: "Eggs",
  FoodType.fishFarmed: "Farmed Fish",
  FoodType.fishWild: "Wild Fish",
  FoodType.groundnuts: "Peanuts",
  FoodType.lambAndMutton: "Lamb & Mutton",
  FoodType.maizeMeal: "Cornmeal",
  FoodType.milk: "Milk",
  FoodType.nuts: "Nuts",
  FoodType.oatmeal: "Oatmeal/Cereal",
  FoodType.oliveOil: "Olive Oil",
  FoodType.onionsAndLeeks: "Onions & Leeks",
  FoodType.otherFruit: "Other Fruits",
  FoodType.otherPulses: "Other Legumes",
  FoodType.otherVegetables: "Other Vegetables",
  FoodType.palmOil: "Palm Oil",
  FoodType.peas: "Peas",
  FoodType.pigMeat: "Pork",
  FoodType.potatoes: "Potatoes",
  FoodType.poultryMeat: "Chicken",
  FoodType.rapeseedOil: "Canola Oil",
  FoodType.rice: "Rice",
  FoodType.rootVegetables: "Root Vegetables",
  FoodType.soybeanOil: "Soybean Oil",
  FoodType.soymilk: "Soy Milk",
  FoodType.sunflowerOil: "Sunflower Oil",
  FoodType.tofu: "Tofu",
  FoodType.tomatoes: "Tomatoes",
  FoodType.bread: "Bread (Wheat & Rye)",
  FoodType.wine: "Wine",
  HouseholdAppliance.airConditioner: 'Air Conditioner',
  HouseholdAppliance.airfryer: 'Air Fryer',
  HouseholdAppliance.blender: 'Blender',
  HouseholdAppliance.ceilingFan: 'Ceiling Fan',
  HouseholdAppliance.coffeeMaker: 'Coffee Maker',
  HouseholdAppliance.computerLaptop: 'Computer/Laptop',
  HouseholdAppliance.dehumidifier: 'Dehumidifier',
  HouseholdAppliance.dishwasher: 'Dishwasher',
  HouseholdAppliance.dryer: 'Dryer',
  HouseholdAppliance.electricStove: 'Electric Stove',
  HouseholdAppliance.electricToothbrush: 'Electric Toothbrush',
  HouseholdAppliance.gasBoiler: 'Gas Boiler',
  HouseholdAppliance.gamingConsole: 'Gaming Console',
  HouseholdAppliance.hairDryer: 'Hair Dryer',
  HouseholdAppliance.hotWaterHeater: 'Hot Water Heater',
  HouseholdAppliance.incandescentBulbs: 'Incandescent Bulbs',
  HouseholdAppliance.iron: 'Iron',
  HouseholdAppliance.kettle: 'Kettle',
  HouseholdAppliance.ledCFLBulbs: 'LED/CFL Bulbs',
  HouseholdAppliance.microwave: 'Microwave',
  HouseholdAppliance.oven: 'Oven',
  HouseholdAppliance.refrigerator: 'Refrigerator',
  HouseholdAppliance.routerModem: 'WiFi Router',
  HouseholdAppliance.smartphoneCharging: 'Smartphone Charging',
  HouseholdAppliance.spaceHeater: 'Space Heater',
  HouseholdAppliance.tablet: 'Tablet',
  HouseholdAppliance.television: 'Television',
  HouseholdAppliance.toaster: 'Toaster',
  HouseholdAppliance.vacuumCleaner: 'Vacuum Cleaner',
  HouseholdAppliance.washingMachine: 'Washing Machine',
};

const Map<dynamic, double> allEmissionValues = {
  FlightType.domestic: 0.27101,
  FlightType.shortHaul: 0.18499,
  FlightType.longHaul: 0.25998,
  FlightType.international: 0.17493,
  BusType.localLondonBus: 0.07784,
  BusType.averageLocalBus: 0.10141,
  BusType.coach: 0.02669,
  TrainType.nationalRail: 0.0351,
  TrainType.internationalRail: 0.00441,
  TrainType.lightRailAndTram: 0.02832,
  TrainType.londonUnderground: 0.02753,
  BatteryElectric.mini: 0.04041,
  BatteryElectric.superMini: 0.04474,
  BatteryElectric.lowerMedium: 0.04789,
  BatteryElectric.upperMedium: 0.05005,
  BatteryElectric.executive: 0.04561,
  BatteryElectric.luxury: 0.05318,
  BatteryElectric.sports: 0.07615,
  BatteryElectric.dualPurpose4x4: 0.05556,
  BatteryElectric.mpv: 0.07239,
  BatteryElectric.none: 0,
  HybridElectric.superMini: 0.02951,
  HybridElectric.lowerMedium: 0.02130,
  HybridElectric.upperMedium: 0.02167,
  HybridElectric.executive: 0.02038,
  HybridElectric.luxury: 0.02272,
  HybridElectric.sports: 0.01635,
  HybridElectric.dualPurpose4x4: 0.02947,
  HybridElectric.mpv: 0.03866,
  HybridElectric.none: 0,
  CarTypeDiesel.mini: 0.10607,
  CarTypeDiesel.superMini: 0.13047,
  CarTypeDiesel.lowerMedium: 0.14178,
  CarTypeDiesel.upperMedium: 0.15882,
  CarTypeDiesel.executive: 0.17142,
  CarTypeDiesel.luxury: 0.20952,
  CarTypeDiesel.sports: 0.16776,
  CarTypeDiesel.dualPurpose4x4: 0.20027,
  CarTypeDiesel.mpv: 0.17492,
  CarTypeDiesel.smallMotorbike: 0.08094,
  CarTypeDiesel.mediumMotorbike: 0.09826,
  CarTypeDiesel.largeMotorbike: 0.13072,
  CarTypeDiesel.averageMotorbike: 0.11138,
  CarTypeDiesel.none: 0,
  CarTypePetrol.mini: 0.12962,
  CarTypePetrol.superMini: 0.14101,
  CarTypePetrol.lowerMedium: 0.16405,
  CarTypePetrol.upperMedium: 0.19143,
  CarTypePetrol.executive: 0.21164,
  CarTypePetrol.luxury: 0.31741,
  CarTypePetrol.sports: 0.23648,
  CarTypePetrol.dualPurpose4x4: 0.20337,
  CarTypePetrol.mpv: 0.18358,
  CarTypePetrol.smallMotorbike: 0.08094,
  CarTypePetrol.mediumMotorbike: 0.09826,
  CarTypePetrol.largeMotorbike: 0.13072,
  CarTypePetrol.averageMotorbike: 0.11138,
  CarTypePetrol.none: 0,
  DietaryType.vegan: 2.120625,
  DietaryType.vegetarian: 2.7,
  DietaryType.meatOnceAWeek: 2.9225,
  DietaryType.meatThreeToFourTimesAWeek: 4.8,
  DietaryType.meatFivePlusDays: 6.408,
  FuelType.woodLogs: 43.89327,
  FuelType.woodChips: 40.58114,
  FuelType.woodPellets: 51.56192,
  FuelType.grassStraw: 57.63342,
  FuelType.coal: 2904.95,
  FoodType.apples: 0.4,
  FoodType.bananas: 0.8,
  FoodType.beer: 1.2,
  FoodType.beetSugar: 1.8,
  FoodType.berriesAndGrapes: 1.4,
  FoodType.bovineMeatBeef: 60.4,
  FoodType.bovineMeatDairy: 34.1,
  FoodType.brassicas: 0.4,
  FoodType.caneSugar: 3.2,
  FoodType.cassava: 1.1,
  FoodType.cheese: 18.6,
  FoodType.citrusFruit: 0.3,
  FoodType.coffee: 8.2,
  FoodType.crustaceansFarmed: 14.7,
  FoodType.darkChocolate: 5.0,
  FoodType.eggs: 4.2,
  FoodType.fishFarmed: 7.9,
  FoodType.fishWild: 8.19,
  FoodType.groundnuts: 3.3,
  FoodType.lambAndMutton: 40.6,
  FoodType.maizeMeal: 1.2,
  FoodType.milk: 2.7,
  FoodType.nuts: -1.3,
  FoodType.oatmeal: 2.6,
  FoodType.oliveOil: 5.1,
  FoodType.onionsAndLeeks: 0.4,
  FoodType.otherFruit: 0.7,
  FoodType.otherPulses: 1.4,
  FoodType.otherVegetables: 0.4,
  FoodType.palmOil: 7.2,
  FoodType.peas: 0.8,
  FoodType.pigMeat: 10.6,
  FoodType.potatoes: 0.5,
  FoodType.poultryMeat: 7.5,
  FoodType.rapeseedOil: 3.5,
  FoodType.rice: 3.7,
  FoodType.rootVegetables: 0.4,
  FoodType.soybeanOil: 3.9,
  FoodType.soymilk: 0.9,
  FoodType.sunflowerOil: 3.5,
  FoodType.tofu: 2.6,
  FoodType.tomatoes: 0.7,
  FoodType.bread: 1.3,
  FoodType.wine: 1.6,
  HouseholdAppliance.airConditioner: (1 * 0.20496) / 60,
  HouseholdAppliance.airfryer: (1.55 * 0.20496) / 60,
  HouseholdAppliance.blender: (0.4 * 0.20496) / 60,
  HouseholdAppliance.ceilingFan: (0.075 * 0.20496) / 60,
  HouseholdAppliance.coffeeMaker: (1.2 * 0.20496) / 60,
  HouseholdAppliance.computerLaptop: (0.06 * 0.20496) / 60,
  HouseholdAppliance.dehumidifier: (0.483 * 0.20496) / 60,
  HouseholdAppliance.dishwasher: (0.91 * 0.20496) / 60,
  HouseholdAppliance.dryer: (1.95 * 0.20496) / 60,
  HouseholdAppliance.electricStove: (1.5 * 0.20496) / 60,
  HouseholdAppliance.electricToothbrush: (0.0025 * 0.20496) / 60,
  HouseholdAppliance.gasBoiler: (0.18256 * 0.20496) / 60,
  HouseholdAppliance.gamingConsole: (0.09 * 0.20496) / 60,
  HouseholdAppliance.hairDryer: (1.5 * 0.20496) / 60,
  HouseholdAppliance.hotWaterHeater: (4.0 * 0.20496) / 60,
  HouseholdAppliance.incandescentBulbs: (0.06 * 0.20496) / 60,
  HouseholdAppliance.iron: (1.1 * 0.20496) / 60,
  HouseholdAppliance.kettle: (3 * 0.20496) / 60,
  HouseholdAppliance.ledCFLBulbs: (0.01 * 0.20496) / 60,
  HouseholdAppliance.microwave: (0.8 * 0.20496) / 60,
  HouseholdAppliance.oven: (0.8 * 0.20496) / 60,
  HouseholdAppliance.refrigerator: (0.227 * 0.20496) / 60,
  HouseholdAppliance.routerModem: (0.006 * 0.20496) / 60,
  HouseholdAppliance.smartphoneCharging: (0.004 * 0.20496) / 60,
  HouseholdAppliance.spaceHeater: (1.5 * 0.20496) / 60,
  HouseholdAppliance.tablet: (0.006 * 0.20496) / 60,
  HouseholdAppliance.television: (0.05 * 0.20496) / 60,
  HouseholdAppliance.toaster: (1.2 * 0.20496) / 60,
  HouseholdAppliance.vacuumCleaner: (1.4 * 0.20496) / 60,
  HouseholdAppliance.washingMachine: (0.75 * 0.20496) / 60,
};
